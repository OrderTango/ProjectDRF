# Generated by Django 2.1.2 on 2019-10-29 19:09

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('OrderTangoApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('areaId', models.AutoField(primary_key=True, serialize=False)),
                ('areaName', models.CharField(max_length=30, null=True)),
                ('areaDesc', models.TextField()),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Area',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customerId', models.AutoField(primary_key=True, serialize=False)),
                ('cusCompanyName', models.CharField(max_length=60)),
                ('cusCompanyCode', models.CharField(max_length=100, null=True)),
                ('cusEmail', models.EmailField(max_length=60, null=True)),
                ('cusContactNo', models.CharField(max_length=12)),
                ('cusAddress_Line1', models.CharField(max_length=100)),
                ('cusAddress_Line2', models.CharField(max_length=100)),
                ('cusUnit1', models.CharField(max_length=2)),
                ('cusUnit2', models.CharField(max_length=2)),
                ('cusPostalCode', models.CharField(max_length=7)),
                ('customerCode', models.CharField(max_length=100, null=True)),
                ('contactPerson', models.CharField(max_length=60, null=True)),
                ('connectionCode', models.CharField(max_length=100, null=True)),
                ('cusAlterNateEmail', models.EmailField(max_length=60, null=True)),
                ('cusCommunicationEmail', models.EmailField(max_length=60, null=True)),
                ('invitationStatus', models.IntegerField(default=0)),
                ('relationshipStatus', models.BooleanField(default=False)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('cusCountry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.Country')),
                ('cusCountryCode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.CountryCode')),
                ('cusState', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.State')),
            ],
            options={
                'db_table': 'Customer',
            },
        ),
        migrations.CreateModel(
            name='CustomerProductCatalog',
            fields=[
                ('customerCatId', models.AutoField(primary_key=True, serialize=False)),
                ('itemCode', models.CharField(max_length=50)),
                ('itemName', models.CharField(max_length=50)),
                ('customerItemCode', models.CharField(max_length=50, null=True)),
                ('customerItemName', models.CharField(max_length=50, null=True)),
                ('salesPrice', models.FloatField(null=True)),
                ('discountPercentage', models.FloatField(null=True)),
                ('discountAbsolute', models.FloatField(null=True)),
                ('discountPrice', models.FloatField(null=True)),
                ('stockStatus', models.CharField(default='Available', max_length=50)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('linked', models.BooleanField(default=False)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('customerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customerCatalog', to='OrderTangoSubDomainApp.Customer')),
            ],
            options={
                'db_table': 'CustomerProductCatalog',
            },
        ),
        migrations.CreateModel(
            name='CustomerShippingAddress',
            fields=[
                ('cusShippingId', models.AutoField(primary_key=True, serialize=False)),
                ('cusShipAddress_Line1', models.CharField(max_length=100)),
                ('cusShipAddress_Line2', models.CharField(max_length=100)),
                ('cusShipUnit1', models.CharField(max_length=2)),
                ('cusShipUnit2', models.CharField(max_length=2)),
                ('cusShipPostalCode', models.CharField(max_length=7)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('cusShipCountry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.Country')),
                ('cusShipState', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.State')),
                ('shippingCustomer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.Customer')),
            ],
            options={
                'db_table': 'CustomerShippingAddress',
            },
        ),
        migrations.CreateModel(
            name='CustomerSiteDetails',
            fields=[
                ('userCustSitesId', models.AutoField(primary_key=True, serialize=False)),
                ('userCustSiteId', models.CharField(max_length=100)),
                ('userCustSiteName', models.CharField(max_length=100)),
                ('customer_address_Line1', models.CharField(max_length=100)),
                ('customer_address_Line2', models.CharField(max_length=100)),
                ('customer_unit1', models.CharField(max_length=2)),
                ('customer_unit2', models.CharField(max_length=2)),
                ('customer_postalCode', models.CharField(max_length=7)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('linkedStatus', models.BooleanField(default=False)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('customer_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.Country')),
                ('customer_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.State')),
            ],
            options={
                'db_table': 'CustomerSiteDetails',
            },
        ),
        migrations.CreateModel(
            name='Holidays',
            fields=[
                ('holidayId', models.AutoField(primary_key=True, serialize=False)),
                ('holidayYear', models.IntegerField()),
                ('holidayName', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Holidays',
            },
        ),
        migrations.CreateModel(
            name='HolidaysDetails',
            fields=[
                ('holidayDetId', models.AutoField(primary_key=True, serialize=False)),
                ('holidayDate', models.CharField(max_length=50)),
                ('holidayReason', models.CharField(max_length=50)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('holiday', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holiday', to='OrderTangoSubDomainApp.Holidays')),
            ],
            options={
                'db_table': 'HolidaysDetails',
            },
        ),
        migrations.CreateModel(
            name='itemDepartment',
            fields=[
                ('itemDeptId', models.AutoField(primary_key=True, serialize=False)),
                ('itemDeptCode', models.CharField(max_length=50, null=True)),
                ('itemDeptName', models.CharField(max_length=50, null=True)),
                ('itemDeptDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'itemDepartment',
            },
        ),
        migrations.CreateModel(
            name='itemDimension',
            fields=[
                ('itemDimensionId', models.AutoField(primary_key=True, serialize=False)),
                ('itemDimensionCode', models.CharField(max_length=50, null=True)),
                ('itemDimensionName', models.CharField(max_length=50, null=True)),
                ('itemDimensionDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'itemDimension',
            },
        ),
        migrations.CreateModel(
            name='ItemMaster',
            fields=[
                ('itemMasterId', models.AutoField(primary_key=True, serialize=False)),
                ('itemCode', models.CharField(max_length=60, null=True)),
                ('itemName', models.CharField(max_length=60, null=True)),
                ('alterItemCode', models.CharField(max_length=60)),
                ('alterItemName', models.CharField(max_length=60)),
                ('brandName', models.CharField(max_length=60)),
                ('itemDesc', models.CharField(max_length=60)),
                ('packingUnit', models.CharField(max_length=60)),
                ('selfManufacturing', models.BooleanField(default=False)),
                ('manufacturingLeadTime', models.CharField(max_length=60)),
                ('productDetail', models.CharField(default='Both', max_length=60)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'itemmaster',
            },
        ),
        migrations.CreateModel(
            name='itemMeasurement',
            fields=[
                ('measurementId', models.AutoField(primary_key=True, serialize=False)),
                ('measurementDimension', models.CharField(max_length=60, null=True)),
                ('measurementLength', models.FloatField(null=True)),
                ('measurementWidth', models.FloatField(null=True)),
                ('measurementHeight', models.FloatField(null=True)),
                ('measurementWeight', models.FloatField(null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('measurementDimensionUnit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measurementDimensionUnit', to='OrderTangoSubDomainApp.itemDimension')),
                ('measurementItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurementItem', to='OrderTangoSubDomainApp.ItemMaster')),
            ],
            options={
                'db_table': 'itemMeasurement',
            },
        ),
        migrations.CreateModel(
            name='itemParameter',
            fields=[
                ('parameterId', models.AutoField(primary_key=True, serialize=False)),
                ('alterNateParamOne', models.CharField(max_length=60, null=True)),
                ('alterNateParamTwo', models.CharField(max_length=60, null=True)),
                ('alterNateParamThree', models.CharField(max_length=60, null=True)),
                ('alterNateParamFour', models.CharField(max_length=60, null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('parameterItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameterItem', to='OrderTangoSubDomainApp.ItemMaster')),
            ],
            options={
                'db_table': 'itemParameter',
            },
        ),
        migrations.CreateModel(
            name='itemStorage',
            fields=[
                ('storageId', models.AutoField(primary_key=True, serialize=False)),
                ('storageShelfLife', models.CharField(max_length=60, null=True)),
                ('storageCase', models.CharField(max_length=60, null=True)),
                ('storageTier', models.CharField(max_length=60, null=True)),
                ('storagePallet', models.CharField(max_length=60, null=True)),
                ('storageRack', models.CharField(max_length=60, null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('storageDept', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='storageDept', to='OrderTangoSubDomainApp.itemDepartment')),
                ('storageItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='storageItem', to='OrderTangoSubDomainApp.ItemMaster')),
            ],
            options={
                'db_table': 'itemStorage',
            },
        ),
        migrations.CreateModel(
            name='merchantCategory',
            fields=[
                ('mrctCatId', models.AutoField(primary_key=True, serialize=False)),
                ('mrctCatCode', models.CharField(max_length=50, null=True)),
                ('mrctCatName', models.CharField(max_length=50, null=True)),
                ('mrctCatDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'merchantCategory',
            },
        ),
        migrations.CreateModel(
            name='merchantSubCategoryOne',
            fields=[
                ('mrctSubCatOneId', models.AutoField(primary_key=True, serialize=False)),
                ('mrctSubCatOneCode', models.CharField(max_length=50, null=True)),
                ('mrctSubCatOneName', models.CharField(max_length=50, null=True)),
                ('mrctSubCatOneDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'merchantSubCategoryOne',
            },
        ),
        migrations.CreateModel(
            name='merchantSubCategoryTwo',
            fields=[
                ('mrctSubCatTwoId', models.AutoField(primary_key=True, serialize=False)),
                ('mrctSubCatTwoCode', models.CharField(max_length=50, null=True)),
                ('mrctSubCatTwoName', models.CharField(max_length=50, null=True)),
                ('mrctSubCatTwoDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'merchantSubCategoryTwo',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationId', models.AutoField(primary_key=True, serialize=False)),
                ('sendFromId', models.CharField(max_length=255, null=True)),
                ('sendingTrader', models.CharField(default='Default', max_length=255)),
                ('desc', models.CharField(max_length=255, null=True)),
                ('type', models.CharField(max_length=255, null=True)),
                ('href', models.CharField(max_length=255, null=True)),
                ('viewed', models.CharField(default='No', editable=False, max_length=255)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='productAttribute',
            fields=[
                ('attributeId', models.AutoField(primary_key=True, serialize=False)),
                ('attributeColor', models.CharField(max_length=60, null=True)),
                ('attributeSize', models.CharField(max_length=60, null=True)),
                ('attributeDesign', models.CharField(max_length=60, null=True)),
                ('attributeStyle', models.CharField(max_length=60, null=True)),
                ('attributeOther', models.CharField(max_length=60, null=True)),
                ('status', models.CharField(default='Active', max_length=60)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('attributeItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributeItem', to='OrderTangoSubDomainApp.ItemMaster')),
            ],
            options={
                'db_table': 'productAttribute',
            },
        ),
        migrations.CreateModel(
            name='ProductCatalogForPurchase',
            fields=[
                ('purPrdtCatId', models.AutoField(primary_key=True, serialize=False)),
                ('catalogName', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ProductCatalogForPurchase',
            },
        ),
        migrations.CreateModel(
            name='ProductCatalogForPurchaseDetails',
            fields=[
                ('purPrdtCatDetId', models.AutoField(primary_key=True, serialize=False)),
                ('itemCode', models.CharField(max_length=50)),
                ('itemName', models.CharField(max_length=50)),
                ('alterItemCode', models.CharField(max_length=50)),
                ('alterItemName', models.CharField(max_length=50)),
                ('purchasePrice', models.FloatField(null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ProductCatalogForPurchaseDetails',
            },
        ),
        migrations.CreateModel(
            name='ProductCatalogForSale',
            fields=[
                ('salePrdtCatId', models.AutoField(primary_key=True, serialize=False)),
                ('catalogName', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ProductCatalogForSale',
            },
        ),
        migrations.CreateModel(
            name='ProductCatalogForSaleDetails',
            fields=[
                ('salePrdtCatDetId', models.AutoField(primary_key=True, serialize=False)),
                ('itemCode', models.CharField(max_length=50)),
                ('itemName', models.CharField(max_length=50)),
                ('alterItemCode', models.CharField(max_length=50)),
                ('alterItemName', models.CharField(max_length=50)),
                ('salesPrice', models.FloatField(null=True)),
                ('discountPercentage', models.FloatField(null=True)),
                ('discountAbsolute', models.FloatField(null=True)),
                ('discountPrice', models.FloatField(null=True)),
                ('stockStatus', models.CharField(default='Available', max_length=50)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ProductCatalogForSaleDetails',
            },
        ),
        migrations.CreateModel(
            name='productCategory',
            fields=[
                ('prtCatId', models.AutoField(primary_key=True, serialize=False)),
                ('prtCatCode', models.CharField(max_length=50, null=True)),
                ('prtCatName', models.CharField(max_length=50, null=True)),
                ('prtCatDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'productCategory',
            },
        ),
        migrations.CreateModel(
            name='purchasingItems',
            fields=[
                ('purchasingId', models.AutoField(primary_key=True, serialize=False)),
                ('purchasingPrice', models.FloatField(null=True)),
                ('purchasingPriceUnit', models.FloatField(null=True)),
                ('purchasingOrderText', models.CharField(max_length=60, null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('purchasingCurrency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchasingCurrency', to='OrderTangoApp.CurrencyType')),
                ('purchasingItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchasingItem', to='OrderTangoSubDomainApp.ItemMaster')),
            ],
            options={
                'db_table': 'purchasingItems',
            },
        ),
        migrations.CreateModel(
            name='RolesAndAccess',
            fields=[
                ('roleId', models.AutoField(primary_key=True, serialize=False)),
                ('roleName', models.CharField(max_length=50, null=True)),
                ('roleArray', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=None)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'RolesAndAccess',
            },
        ),
        migrations.CreateModel(
            name='salesItems',
            fields=[
                ('salesId', models.AutoField(primary_key=True, serialize=False)),
                ('salesCategoryGrp', models.CharField(max_length=60, null=True)),
                ('salesPrice', models.FloatField(null=True)),
                ('salesPriceUnit', models.FloatField(null=True)),
                ('salesOrderText', models.CharField(max_length=60, null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('salesCurrency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesCurrency', to='OrderTangoApp.CurrencyType')),
                ('salesItem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='salesItem', to='OrderTangoSubDomainApp.ItemMaster')),
            ],
            options={
                'db_table': 'salesItems',
            },
        ),
        migrations.CreateModel(
            name='serviceLevelAgreement',
            fields=[
                ('slaId', models.AutoField(primary_key=True, serialize=False)),
                ('slaType', models.CharField(max_length=30, null=True)),
                ('slaDetails', django.contrib.postgres.fields.jsonb.JSONField()),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'serviceLevelAgreement',
            },
        ),
        migrations.CreateModel(
            name='Sites',
            fields=[
                ('siteId', models.AutoField(primary_key=True, serialize=False)),
                ('siteName', models.CharField(max_length=30, null=True)),
                ('siteDesc', models.TextField()),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Sites',
            },
        ),
        migrations.CreateModel(
            name='storageConditions',
            fields=[
                ('stgcntId', models.AutoField(primary_key=True, serialize=False)),
                ('stgcntCode', models.CharField(max_length=50, null=True)),
                ('stgcntName', models.CharField(max_length=50, null=True)),
                ('stgcntDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'storageConditions',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('storeId', models.AutoField(primary_key=True, serialize=False)),
                ('stockCount', models.CharField(max_length=50)),
                ('sellCount', models.CharField(max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('companyAddress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OrderTangoSubDomainApp.Sites')),
                ('itemStatus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itemstatus', to='OrderTangoApp.ItemStatus')),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='OrderTangoSubDomainApp.ItemMaster')),
                ('sellUnit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sell', to='OrderTangoApp.QuantityType')),
                ('stockUnit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock', to='OrderTangoApp.QuantityType')),
            ],
            options={
                'db_table': 'store',
            },
        ),
        migrations.CreateModel(
            name='Subuser',
            fields=[
                ('subUserId', models.AutoField(primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=30, null=True)),
                ('userName', models.CharField(max_length=30, null=True)),
                ('password', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=50)),
                ('contactNo', models.CharField(max_length=12)),
                ('DOJ', models.CharField(max_length=50, null=True)),
                ('DOD', models.CharField(max_length=50, null=True)),
                ('profilepic', models.FileField(blank=True, max_length=5000, null=True, upload_to='')),
                ('status', models.CharField(default='Active', max_length=50)),
                ('lastLogin', models.DateTimeField(auto_now_add=True)),
                ('activityLog', models.CharField(max_length=100, null=True)),
                ('superAdmin', models.BooleanField(default=False)),
                ('accessRights', models.CharField(default='Admin', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.Area')),
                ('countryCode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.CountryCode')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.RolesAndAccess')),
            ],
            options={
                'db_table': 'subuser',
            },
        ),
        migrations.CreateModel(
            name='SubuserSiteAssign',
            fields=[
                ('subuserSiteAssignId', models.AutoField(primary_key=True, serialize=False)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('subuserSiteAssignSites', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.Sites')),
                ('subuserSiteAssignSubUser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Subuser', to='OrderTangoSubDomainApp.Subuser')),
            ],
            options={
                'db_table': 'subusersiteassign',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('supplierId', models.AutoField(primary_key=True, serialize=False)),
                ('supCompanyName', models.CharField(max_length=60)),
                ('supCompanyCode', models.CharField(max_length=100, null=True)),
                ('supEmail', models.EmailField(max_length=60, null=True)),
                ('supContactNo', models.CharField(max_length=12)),
                ('supAddress_Line1', models.CharField(max_length=100)),
                ('supAddress_Line2', models.CharField(max_length=100)),
                ('supUnit1', models.CharField(max_length=2)),
                ('supUnit2', models.CharField(max_length=2)),
                ('supPostalCode', models.CharField(max_length=7)),
                ('supplierCode', models.CharField(max_length=100, null=True)),
                ('connectionCode', models.CharField(max_length=100, null=True)),
                ('supAlterNateEmail', models.EmailField(max_length=60, null=True)),
                ('supCommunicationEmail', models.EmailField(max_length=60, null=True)),
                ('invitationStatus', models.IntegerField(default=0)),
                ('relationshipStatus', models.BooleanField(default=False)),
                ('contactPerson', models.CharField(max_length=60, null=True)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('supCountry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.Country')),
                ('supCountryCode', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.CountryCode')),
                ('supState', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.State')),
            ],
            options={
                'db_table': 'Supplier',
            },
        ),
        migrations.CreateModel(
            name='SupplierProductCatalog',
            fields=[
                ('supplierCatId', models.AutoField(primary_key=True, serialize=False)),
                ('itemCode', models.CharField(max_length=50, null=True)),
                ('itemName', models.CharField(max_length=50, null=True)),
                ('supplierItemCode', models.CharField(max_length=50, null=True)),
                ('supplierItemName', models.CharField(max_length=50, null=True)),
                ('purchasePrice', models.FloatField(null=True)),
                ('discountPrice', models.FloatField(null=True)),
                ('stockStatus', models.CharField(default='Available', max_length=50)),
                ('defaultSupplier', models.BooleanField(default=False)),
                ('setAsView', models.BooleanField(default=False)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('linked', models.BooleanField(default=False)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('itemCategory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemCategorySupplier', to='OrderTangoSubDomainApp.productCategory')),
                ('productCatId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='productCatId', to='OrderTangoSubDomainApp.ProductCatalogForPurchase')),
                ('productId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='productIdSupplier', to='OrderTangoSubDomainApp.ItemMaster')),
                ('purchaseCurrency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purCurrencyCusCat', to='OrderTangoApp.CurrencyType')),
            ],
            options={
                'db_table': 'SupplierProductCatalog',
            },
        ),
        migrations.CreateModel(
            name='SupplierShippingAddress',
            fields=[
                ('supShippingId', models.AutoField(primary_key=True, serialize=False)),
                ('supShipAddress_Line1', models.CharField(max_length=100)),
                ('supShipAddress_Line2', models.CharField(max_length=100)),
                ('supShipUnit1', models.CharField(max_length=2)),
                ('supShipUnit2', models.CharField(max_length=2)),
                ('supShipPostalCode', models.CharField(max_length=7)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('shippingSupplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.Supplier')),
                ('supShipCountry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.Country')),
                ('supShipState', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.State')),
            ],
            options={
                'db_table': 'SupplierShippingAddress',
            },
        ),
        migrations.CreateModel(
            name='SupplierSlaForSites',
            fields=[
                ('userSupSitesId', models.AutoField(primary_key=True, serialize=False)),
                ('slaFromSupplier', django.contrib.postgres.fields.jsonb.JSONField()),
                ('supplier_address_Line1', models.CharField(max_length=100)),
                ('supplier_address_Line2', models.CharField(max_length=100)),
                ('supplier_unit1', models.CharField(max_length=2)),
                ('supplier_unit2', models.CharField(max_length=2)),
                ('supplier_postalCode', models.CharField(max_length=7)),
                ('status', models.CharField(default='Active', max_length=50)),
                ('selfCreation', models.BooleanField(default=False)),
                ('linkedStatus', models.BooleanField(default=False)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('mappedSites', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.Sites')),
                ('supplier_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.Country')),
                ('supplier_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.State')),
                ('userSupSitesCompany', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.Supplier')),
            ],
            options={
                'db_table': 'SupplierSlaForSites',
            },
        ),
        migrations.CreateModel(
            name='taxCode',
            fields=[
                ('taxCodeId', models.AutoField(primary_key=True, serialize=False)),
                ('taxCodeCode', models.CharField(max_length=50, null=True)),
                ('taxCodeName', models.CharField(max_length=50, null=True)),
                ('taxCodeDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'taxCode',
            },
        ),
        migrations.CreateModel(
            name='typeOfArticle',
            fields=[
                ('articleId', models.AutoField(primary_key=True, serialize=False)),
                ('articleCode', models.CharField(max_length=50, null=True)),
                ('articleName', models.CharField(max_length=50, null=True)),
                ('articleDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'typeOfArticle',
            },
        ),
        migrations.CreateModel(
            name='TypeOfSites',
            fields=[
                ('siteTypeId', models.AutoField(primary_key=True, serialize=False)),
                ('siteTypeCode', models.CharField(max_length=50, null=True)),
                ('siteTypeName', models.CharField(max_length=50, null=True)),
                ('siteTypeDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'TypeOfSites',
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('usradd_id', models.AutoField(primary_key=True, serialize=False)),
                ('usradd_address_Line1', models.CharField(max_length=100)),
                ('usradd_address_Line2', models.CharField(max_length=100)),
                ('usradd_unit1', models.CharField(max_length=2)),
                ('usradd_unit2', models.CharField(max_length=2)),
                ('usradd_postalCode', models.CharField(max_length=7)),
                ('usradd_addressType', models.CharField(max_length=50)),
                ('status', models.CharField(default='Active', max_length=100)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
                ('usradd_country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.Country')),
                ('usradd_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoApp.State')),
            ],
            options={
                'db_table': 'useraddress',
            },
        ),
        migrations.CreateModel(
            name='weightUnit',
            fields=[
                ('weightUnitId', models.AutoField(primary_key=True, serialize=False)),
                ('weightUnitCode', models.CharField(max_length=50, null=True)),
                ('weightUnitName', models.CharField(max_length=50, null=True)),
                ('weightUnitDesc', models.CharField(max_length=50, null=True)),
                ('createdDateTime', models.DateTimeField(auto_now_add=True)),
                ('updatedDateTime', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'weightUnit',
            },
        ),
        migrations.AddField(
            model_name='supplierproductcatalog',
            name='purchaseTax',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purTaxCusCat', to='OrderTangoSubDomainApp.taxCode'),
        ),
        migrations.AddField(
            model_name='supplierproductcatalog',
            name='purchaseUom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purUomCusCat', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='supplierproductcatalog',
            name='purchaseUomForKg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purUomForKgCusCat', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='supplierproductcatalog',
            name='supplierId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplierCatalog', to='OrderTangoSubDomainApp.Supplier'),
        ),
        migrations.AddField(
            model_name='sites',
            name='siteAddress',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='site_address', to='OrderTangoSubDomainApp.UserAddress'),
        ),
        migrations.AddField(
            model_name='sites',
            name='siteArea',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='area_sites', to='OrderTangoSubDomainApp.Area'),
        ),
        migrations.AddField(
            model_name='sites',
            name='siteType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_sites', to='OrderTangoSubDomainApp.TypeOfSites'),
        ),
        migrations.AddField(
            model_name='salesitems',
            name='salesTax',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesTax', to='OrderTangoSubDomainApp.taxCode'),
        ),
        migrations.AddField(
            model_name='salesitems',
            name='salesUom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesUom', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='salesitems',
            name='salesUomForKg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesUomForKg', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='purchasingitems',
            name='purchasingTax',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchasingTax', to='OrderTangoSubDomainApp.taxCode'),
        ),
        migrations.AddField(
            model_name='purchasingitems',
            name='purchasingUom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchasingUom', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='purchasingitems',
            name='purchasingUomForKg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchasingUomForKg', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='productcatalogforsaledetails',
            name='itemCategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemCategorySale', to='OrderTangoSubDomainApp.productCategory'),
        ),
        migrations.AddField(
            model_name='productcatalogforsaledetails',
            name='productCatelogId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prdtCatelogueId', to='OrderTangoSubDomainApp.ProductCatalogForSale'),
        ),
        migrations.AddField(
            model_name='productcatalogforsaledetails',
            name='productId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salCatProductId', to='OrderTangoSubDomainApp.ItemMaster'),
        ),
        migrations.AddField(
            model_name='productcatalogforsaledetails',
            name='salesCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesCurrencypCat', to='OrderTangoApp.CurrencyType'),
        ),
        migrations.AddField(
            model_name='productcatalogforsaledetails',
            name='salesTax',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesTaxpCat', to='OrderTangoSubDomainApp.taxCode'),
        ),
        migrations.AddField(
            model_name='productcatalogforsaledetails',
            name='salesUom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesUompCat', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='productcatalogforsaledetails',
            name='salesUomForKg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesUomForKgpCat', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='productcatalogforpurchasedetails',
            name='itemCategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemCategoryPurchase', to='OrderTangoSubDomainApp.productCategory'),
        ),
        migrations.AddField(
            model_name='productcatalogforpurchasedetails',
            name='productCatelogId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='prdtCatelogueId', to='OrderTangoSubDomainApp.ProductCatalogForPurchase'),
        ),
        migrations.AddField(
            model_name='productcatalogforpurchasedetails',
            name='productId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purCatProductId', to='OrderTangoSubDomainApp.ItemMaster'),
        ),
        migrations.AddField(
            model_name='productcatalogforpurchasedetails',
            name='purchaseCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchaseCurrencypCat', to='OrderTangoApp.CurrencyType'),
        ),
        migrations.AddField(
            model_name='productcatalogforpurchasedetails',
            name='purchaseTax',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchaseTaxpCat', to='OrderTangoSubDomainApp.taxCode'),
        ),
        migrations.AddField(
            model_name='productcatalogforpurchasedetails',
            name='purchaseUom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchaseUompCat', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='productcatalogforpurchasedetails',
            name='purchaseUomForKg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='purchaseUomForKgpCat', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='notification',
            name='notificationSite',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteNotification', to='OrderTangoSubDomainApp.Sites'),
        ),
        migrations.AddField(
            model_name='itemmeasurement',
            name='measurementWeightUnit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measurementWeightUnit', to='OrderTangoSubDomainApp.weightUnit'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='articleType',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articleType', to='OrderTangoSubDomainApp.typeOfArticle'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='baseUom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='baseUom', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='itemCategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemCategory', to='OrderTangoSubDomainApp.productCategory'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='itemMerchantCategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemMerchantCategory', to='OrderTangoSubDomainApp.merchantCategory'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='itemMerchantCategoryOne',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemMerchantCategoryOne', to='OrderTangoSubDomainApp.merchantSubCategoryOne'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='itemMerchantCategoryTwo',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemMerchantCategoryTwo', to='OrderTangoSubDomainApp.merchantSubCategoryTwo'),
        ),
        migrations.AddField(
            model_name='itemmaster',
            name='itemStorageCondition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemStorageCondition', to='OrderTangoSubDomainApp.storageConditions'),
        ),
        migrations.AddField(
            model_name='customersitedetails',
            name='mappedSites',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.Sites'),
        ),
        migrations.AddField(
            model_name='customersitedetails',
            name='userCustSitesCompany',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='OrderTangoSubDomainApp.Customer'),
        ),
        migrations.AddField(
            model_name='customerproductcatalog',
            name='itemCategory',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemCategoryCustomer', to='OrderTangoSubDomainApp.productCategory'),
        ),
        migrations.AddField(
            model_name='customerproductcatalog',
            name='productCatId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='productCatId', to='OrderTangoSubDomainApp.ProductCatalogForSale'),
        ),
        migrations.AddField(
            model_name='customerproductcatalog',
            name='productId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='productId', to='OrderTangoSubDomainApp.ItemMaster'),
        ),
        migrations.AddField(
            model_name='customerproductcatalog',
            name='salesCurrency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesCurrencyCusCat', to='OrderTangoApp.CurrencyType'),
        ),
        migrations.AddField(
            model_name='customerproductcatalog',
            name='salesTax',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesTaxCusCat', to='OrderTangoSubDomainApp.taxCode'),
        ),
        migrations.AddField(
            model_name='customerproductcatalog',
            name='salesUom',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesUomCusCat', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='customerproductcatalog',
            name='salesUomForKg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='salesUomForKgCusCat', to='OrderTangoApp.QuantityType'),
        ),
        migrations.AddField(
            model_name='area',
            name='areaSlaId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sla', to='OrderTangoSubDomainApp.serviceLevelAgreement'),
        ),
    ]
